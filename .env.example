# =============================================================================
# Sherlog MCP Server Configuration
# =============================================================================
# Copy this file to .env and configure the values for your environment

# =============================================================================
# Core Server Settings
# =============================================================================

# Logging level for the MCP server (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Maximum number of concurrent IPython sessions to maintain
MCP_MAX_SESSIONS=4

# Number of operations before automatic memory cleanup
MCP_AUTO_RESET_THRESHOLD=200

# Enable automatic memory management for sessions
MCP_AUTO_RESET_ENABLED=true

# Maximum output size per buffer in bytes
MCP_MAX_OUTPUT_SIZE=50000

# =============================================================================
# Code Analysis Settings  
# =============================================================================

# Path to the codebase directory for code retrieval tools
# CODEBASE_PATH=/path/to/your/codebase

# Supported programming languages for analysis (comma-separated)
# SUPPORTED_LANGUAGES=java,kotlin,python,typescript,javascript,cpp,rust

# =============================================================================
# Google OAuth 2.0 Configuration
# =============================================================================

# Google Cloud Console OAuth 2.0 credentials
# Required for Google Workspace integrations (Gmail, Drive, Calendar, etc.)
# GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
# GOOGLE_CLIENT_SECRET=your-google-client-secret

# OAuth redirect URI (should match Google Cloud Console configuration)
# GOOGLE_REDIRECT_URI=http://localhost:8000/auth/google/callback

# Fernet encryption key for OAuth token storage (base64 encoded)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# OAUTH_ENCRYPTION_KEY=your-base64-fernet-key

# Path to store encrypted OAuth tokens
# OAUTH_STORAGE_PATH=/app/data/oauth_tokens

# =============================================================================
# External MCP Servers
# =============================================================================

# JSON configuration for external MCP servers
# Format matches Claude Desktop configuration
# Example with filesystem and postgres servers:
# EXTERNAL_MCPS_JSON={"filesystem":{"command":"npx","args":["-y","@modelcontextprotocol/server-filesystem","/tmp"]},"postgres":{"command":"npx","args":["-y","@modelcontextprotocol/server-postgres"],"env":{"DATABASE_URL":"postgresql://user:pass@localhost/db"}}}

# =============================================================================
# Development & Debug Settings
# =============================================================================

# Enable debug mode (more verbose logging)
# DEBUG=true

# Development mode (disables some security features)
# DEV_MODE=false

# Custom session data directory
# SESSION_DATA_PATH=/app/data/sessions
